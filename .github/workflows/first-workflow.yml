# name is an inbuilt identifier to name your workflow
name: first workflow for action-code repo

# on is an inbuilt identifier. 
# It will trigger the workflow. workflow_dispatch will trigger workflow manually from Github Action UI
on: workflow_dispatch

# jobs is an inbuilt identifier. It creates a single job even though you write jobs. you are free to name your first job
jobs: 
  job-1: # in job-1, you need to define the environment where different steps (or tasks) will run. This is called a runner. 
         # https://docs.github.com/en/actions/concepts/runners/about-github-hosted-runners 
    runs-on: ubuntu-latest
    steps: # define steps that will run on the runner. 
      - name: welcome message # give a name to the first step
        run: echo "welcome to the first ever step, job, workflow written by you!"
      - name: leave message # name for another step
        run: echo "my work is done here!"
    
  

# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v4

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
